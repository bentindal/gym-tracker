.container.text-center
    - @unassigned_sets = Allset.where(user_id: current_user.id, belongs_to_workout: nil).group_by(&:exercise)
    - if @unassigned_sets.empty? == false
        %h4.text-center.font-weight-light.mb-3
            %strong
                Current Workout
        - @time_elapsed_in_seconds = (Time.now - @unassigned_sets.first[1].first.created_at)
        - @time_elapsed = Time.at(@time_elapsed_in_seconds) - 1.hour
        .text-center.mb-2
            %strong Time Elapsed
            #timer.ml-1 #{@time_elapsed.strftime("%H:%M:%S")}

        - @unassigned_sets.each do |item|
            %table.table.table-sm.border.bg-white.m-auto
                %thead.text-white.font-weight-bold{class: "bg-#{item[0].group_colour}"}
                    %tr
                        %td
                            %a.text-decoration-none.text-white{href: "/allset/"+item[0].id.to_s}
                                = item[0].name
                %tbody
                    - item[1].each do |set|
                        %tr
                            %td.small
                                = "#{set.weight} #{item[0].unit} x #{set.repetitions}"
            = link_to 'View', allset_path(item[0]), {class: "btn w-100 border-top-0 mb-3 font-weight-light"}
        %br
          

        = link_to 'New Exercise', "/exercises", {class: "btn btn-primary btn-lg w-75 mb-3 font-weight-bold"}
        %br
        = link_to 'Finish Workout', "/workout/finish", {class: "btn btn-outline-danger w-50 mb-2 font-weight-bold"}
    - else
        .container.py-5

            %h3.mt-3 No Workout in Progress
            %p.text-muted Click on the button below to start your first exercise
            = link_to 'Begin your Workout', "/exercises", {class: "btn btn-secondary"}
:javascript
    var timer = document.getElementById("timer");

    // if restTimer exists
    function updateTimer() {
        if (timer) {
            // Increment the timer by 1 second and update the display
            var time = timer.innerHTML.split(":");
            var seconds = parseInt(time[2]);
            var minutes = parseInt(time[1]);
            var hours = parseInt(time[0]);
            seconds++;
            if (seconds == 60) {
                seconds = 0;
                minutes++;
                if (minutes == 60) {
                    minutes = 0;
                    hours++;
                }
            }
            timer.innerHTML = (hours ? (hours > 9 ? hours : "0" + hours) : "00")
                + ":" + (minutes ? (minutes > 9 ? minutes : "0" + minutes) : "00")
                + ":" + (seconds > 9 ? seconds : "0" + seconds);


        }
    }
    updateTimer()
    setInterval(updateTimer, 1000);
