#rest-timer{"data-controller": "rest-timer"}
  - if sets.any? && sets.first.created_at > Time.now.beginning_of_day
    .text-muted.mb-2
      - start_time = sets.first.created_at.iso8601
      - puts "Debug: Start time for timer: #{start_time}"
      #timer{"data-rest-timer-target": "timer", "data-start-time": start_time}
      #timer-display{"data-rest-timer-target": "display"}
  
  - if setss.present?
    - setss.each do |date_sets|
      - if date_sets.is_a?(Array) && date_sets.size == 2
        - date = date_sets[0]
        - sets_for_date = date_sets[1]
        .text-muted
          = format_date(date)
        %table.table.text-center.bg-white.table-sm.border
          %tbody
            - sets_for_date.each do |set|
              %tr{class: set_row_class(set)}
                %td
                  = format_set_weight(set)
                  x
                  = format_set_repetitions(set)
                %td
                  %small
                    = link_to '', edit_allset_path(set), {class: "fa-solid fa-pencil btn btn-sm btn-outline-primary bg-white"}
                    = link_to '', allset_path(set.id), {class: "fa-solid fa-trash-can btn btn-sm btn-outline-danger bg-white", data: { turbo_method: :delete, turbo_confirm: "Delete this set?" }} 